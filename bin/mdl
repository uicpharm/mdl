#!/bin/bash

sub_cmd="${1/\.sh/}"
scr_dir=$(realpath "$(dirname "$(readlink -f "$0")")/../libexec")
sub_cmd_path="$scr_dir/mdl-$sub_cmd.sh"

if [ -f "$sub_cmd_path" ]; then
   "$sub_cmd_path" "${@:2}"
else
   [ -n "$sub_cmd" ] && echo -e "The subcommand $sub_cmd doesn't exist.\n"

   # Find all aliases
   declare -a alias_names=()
   declare -a alias_links=()
   while IFS= read -r -d '' alias; do
      alias_name=$(basename -s '.sh' "$alias")
      alias_name=${alias_name/mdl-/}
      alias_names+=("$alias_name")
      alias_name=$(basename -s '.sh' "$(readlink "$alias")")
      alias_name=${alias_name/mdl-/}
      alias_links+=("$alias_name")
   done < <(find "$scr_dir" -maxdepth 1 -type l -name 'mdl-*.sh' -print0)

   # Loop thru all commands, listing matching aliases if they exist
   echo 'Available subcommands:'
   while IFS= read -r -d '' f; do
      cmd=$(basename -s '.sh' "$f")
      cmd=${cmd/mdl-/}
      out="  - $cmd"
      aliases=()
      for i in "${!alias_names[@]}"; do
         [[ $cmd == "${alias_links[$i]}" ]] && aliases+=("${alias_names[$i]}")
      done
      if [[ ${#aliases[@]} -gt 0 ]]; then
         aliases_string="${aliases[*]}"
         out+=" (or: ${aliases_string// /, })"
      fi
      echo "$out"
   done < <(find "$scr_dir" -maxdepth 1 -type f -name 'mdl-*.sh' -print0 | sort -z)
fi
